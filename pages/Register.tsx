import React from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { useForm } from "react-hook-form";
import { yupResolver } from '@hookform/resolvers/yup';
import * as Yup from 'yup';

const Register: React.FC = () => {
    const validationSchema = Yup.object().shape({
        firstName: Yup.string()
            .required('First Name is required'),
        lastName: Yup.string()
            .required('Last name is required'),
        email: Yup.string()
            .required('Email is required')
            .email('Email is invalid'),
        password: Yup.string()
            .required('Password is required')
            .min(6, 'Password must be at least 6 characters')
    });

    const formOptions = { resolver: yupResolver(validationSchema) };

    const { register, handleSubmit, formState: { errors } } = useForm(formOptions);

    return (
        <>
            <Head>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <title>Lezada - Register</title>
            </Head>

            <section id="breadcrumb">
                <div className="container h-100">
                    <div className="content h-100">
                        <h1>Register</h1>
                        <ul className="breadcrumb-links d-flex">
                            <li>
                                <Link href="/">
                                    <a>Home</a>
                                </Link>
                            </li>
                            <li>
                                <span>Register</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </section>

            <section id="register">
                <div className="container">
                    <div className="row">
                        <div className="col-xl-6 col-lg-6 col-md-8 offset-xl-3 offset-lg-3 offset-md-2">
                            <div className="register-area account-wrapper">
                                <div className="title">
                                    <h2>Register</h2>
                                    <h6>If you donâ€™t have an account, register now!</h6>
                                </div>
                                <form onSubmit={handleSubmit((data) => {
                                    console.log(data)
                                })}>
                                    <div className="inputs-wrapper w-100">
                                        <input
                                            type="text"
                                            className={`w-100 ${errors.firstName ? "error-border" : ""}`}
                                            placeholder="First Name"
                                            {...register("firstName")}
                                        />
                                        {errors.firstName && <p>{errors.firstName.message}</p>}
                                    </div>
                                    <div className="inputs-wrapper w-100">
                                        <input
                                            type="text"
                                            className={`w-100 ${errors.lastName ? "error-border" : ""}`}
                                            placeholder="Last Name"
                                            {...register("lastName")}
                                        />
                                        {errors.lastName && <p>{errors.lastName.message}</p>}
                                    </div>
                                    <div className="inputs-wrapper w-100">
                                        <input
                                            type="text"
                                            className={`w-100 ${errors.email ? "error-border" : ""}`}
                                            placeholder="Email"
                                            {...register("email")}
                                        />
                                        {errors.email && <p>{errors.email.message}</p>}
                                    </div>
                                    <div className="inputs-wrapper w-100">
                                        <input
                                            type="password"
                                            className={`w-100 ${errors.password ? "error-border" : ""}`}
                                            placeholder="Password"
                                            {...register("password")}
                                        />
                                        {errors.password && <p>{errors.password.message}</p>}
                                    </div>
                                    <div className="submit-btn register">
                                        <input type="submit" value="Register" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </>
    )
};

export default Register;